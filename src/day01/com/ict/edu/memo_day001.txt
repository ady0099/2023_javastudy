2023-04-25 ~ 2023-10-06
7시30분 정도 출발
출석 930-1820
집 도착
점심식사 13:30~14:20 
아쉬운건 내 자리에서 전방 빔프 화면이 잘 안보여

눈 건조하다 인공눈물 가져와야지


개발자
코딩실력보다 문제해결능력이 중요

it뉴스 확인

개발 블로그 만들자
메모장으로 수업 내용 작성 후 집에 가서 복습용 포스팅
개발자일기 다른 블로그 확인

1-2주에 1회 시험있음
6인 1조 정도의 팀

웹크롤링 확인

디코설치 
크롬설치


자바의 특징
플랫폼 독립성 => 어느 기계(하드웨어)에 설치되더라도 사용이 가능
배우기 쉽다 => ㅋㅋ사실 어려워.. 하지만 일반적으로 다른 언어보다는 쉬운 편

★객체지향 프로그래밍★ 
100%맞진 않지만 쉽게 생각하면 레고를 떠올리면 된다
성을 만드려면 블럭을 쌓아야하듯 부품들을 모아 내가 원하는 것을 만들 수 있다

가비지 컬렉션 -> 요즘 언어는 대부분 되긴함

멀티쓰레드 -> 여러 작업을 동시에 실행함
병렬처리


플랫폼 : 자바를 실행하기 위한 프로그램
- 자바 API
- 자바 가상머신(JVM) // ~~기본상식~~

JVM
자바 컴파일러에 의해 만들어진 '바이트코드(bytecode)'를 !!!!해석하고 실행!!!!하는 '가상적 기계(CPU)'
바이트코드 = 0,1 2진코드 ? 바이너리코드?


API
는 설명서다
무슨 설명서냐? 
사용방법 정의
회사에서 미리 만들어둔 블록들(클래스?)과 설명서를 고대로 가져다 쓰면 빠르게 활용할 수 있겠지?

APIs

11:34 휴식


ppt 3개 다운
구글 드라이브로 보는법 배움

썬 마이크로 시스템즈
오라클 자바 - 개인적으로 쓰는 건 상관없음 / 회사는 문제될 수도 
오픈 자바 - 공짜니까 이거 써야됨

개발자 특징이 잘 돌아가는 건 안고침 ㅋㅋ
open java 11
버전은 올라가도 현업은 8 11 많이 씀
11쓸 것

JVM - 해석하고 실행하는 놈

JDK(java development kit) -자바 개발툴
JRE - 자바가 설치되어 있으면얘임 ? (java runtime environment) 실행

다운로드
자바버전

앞으로 리눅스를 많이 접하게 될 것

.zip설치
알집 - 개인은 돈안내지만 학원은 돈냄
11.0.18 +10
7zip 설치

jdk는 c에 설치

압축풀고폴더명은 openjdk-11로 간략화

환경설정 시작
한번만 하다보니 까먹는데 요새는 자동으로 설정해주는 애들이 많아서 사실 까먹어도 됨
그치만.. 원리는 알아야겠지..?
왜 해야하는지 아는 게 중요

openjdk-11 폴더 내 bin
명령어들이 들어있음

hello -> 01010101 로 번역하는 과정을 컴파일이라고 함
javac = 여기서 c는 컴파일의 약자

0과 1을 자바식으로 해석하고 실행하는 게 JVM
이 명령어가 자바 명령어

cmd로 실행을 하는데 위치가 다르잖아?
그걸 조정해주는 게 초기 환경설정

cmd 작업 표시줄에 고정

내 컴퓨터 - 설정 

C:\Users\ict01-23>java -version
'java'은(는) 내부 또는 외부 명령, 실행할 수 있는 프로그램, 또는
배치 파일이 아닙니다.

C:\Users\ict01-23>javac -version
'javac'은(는) 내부 또는 외부 명령, 실행할 수 있는 프로그램, 또는
배치 파일이 아닙니다.

아직 환경설정이 안됐기 때문
어디서 폴더를 만들어도 사용할 수 있게끔 설정할 예정
내 pc - 고급 시스템 설정 - 환경 변수 - 시스템 변수 - 새로 만들기 
변수 이름 : JAVA_HOME  대문자
변수값 : C:\openjdk-11\bin

새로 만들기2
변수 이름 : CLASSPATH
path 가 나오면 80%는 위치
컴퓨터에서 현재 위치는 '.'
변수 값 : .

시스템 변수를 내리면 Path가 있음
-> 편집
현재 컴퓨가 위치를 기억하는 목록들이 나타남


C:\openjdk-11\bin를 이 Path내부에 바로 기록해도 됨
but 전통적인 방식을 먼저 알기 위해 
경로를 저장한 JAVA_HOME을 입력

cmd를 다시 실행시키면
어라 안바꼈네?
JAVA_HOME 앞 뒤에 %를 붙여줌
%JAVA_HOME%


C:\Users\ict01-23>java -version
openjdk version "11.0.18" 2023-01-17
OpenJDK Runtime Environment OpenLogic-OpenJDK (build 11.0.18+10-adhoc..jdk11u)
OpenJDK 64-Bit Server VM OpenLogic-OpenJDK (build 11.0.18+10-adhoc..jdk11u, mixed mode)

C:\Users\ict01-23>javac -version
javac 11.0.18

d드라이브 ady javastudy  day01

유식 ide / 무식 메모장
면접 // 손코딩 - 백지용지에
system.out.println();
메모장 시험.. 변별력..?

이클립스를 사용할 거지만 메모장으로 연습하자  // 그래서 환경설정을 한 것
웹을 배울 때는 vs code
파이썬은 IntelliJ
java에서 쓰는 툴 전부가 이거임

day01 폴더
메모장 생성 - 보기 세팅
Ex01.java 확장자 변경

메모장 서식 최소 16
대소문자를 구분할 것


class Ex01{
  public static void main(String[] args){
    System.out.println("자바의 꿈");
  }
}


점심 시간
가성비는.. 서강대 학식..!
근처에 어딘가 내려가면 짜장면집
근데 아마 많이 굶고 대충 먹을듯

컴파일을 하니


D:\ady\javastudy\day01>javac Ex01.java
Ex01.java:3: error: unmappable character (0xEC) for encoding x-windows-949
    System.out.println("?옄諛붿쓽 轅?");
                        ^
Ex01.java:3: error: unmappable character (0x88) for encoding x-windows-949
    System.out.println("?옄諛붿쓽 轅?");
                               ^
2 errors
컴파일 에러가 나서 구글링 후 -encoding utf-8 추가
한글 컴파일 오류가 나는 건 알겠는데 정확한 이유는 모르겠다
매번 컴파일 할 때마다 -encoding uft-8을 사용해야 하는 걸까
D:\ady\javastudy\day01>javac -encoding utf-8 Ex01.java

Ex01.class 파일이 추가되었고

D:\ady\javastudy\day01>java Ex01
자바의 꿈

정상적으로 실행된다

옆옆 자리 앉으신 분이 회덮밥 6천원에판다고함
나중에 가봐야지

cd 는 change directory 의 약자

명령 프롬프트 D: 로 경로 변경 // cd가 아님
D로 변경 후 cd로 경로 진입
D:\>cd D:\ady\javastudy\day01

D:\ady\javastudy\day01>
변경되었다

여기서 c:와 d:를 사용하면
D:\ady\javastudy\day01>c:

C:\Users\ict01-23>d:

D:\ady\javastudy\day01>
이런식으로 변경된다

오류가 나면 해결 후 바로 넘어가지 말고 메모를 꼭 하자
다음에 확인할 때 한번 더 볼 수 있도록 !!

명령어 - dir(목록보기)
2023-04-25  오후 01:53    <DIR>          .
2023-04-25  오후 01:53    <DIR>          ..
2023-04-25  오후 01:35               415 Ex01.class
2023-04-25  오후 01:34               104 Ex01.java
2023-04-25  오후 02:14             5,201 수업 메모 day01.txt
               3개 파일               5,720 바이트
               2개 디렉터리  1,000,036,536,320 바이트 남음
cli 라고 부름
Command Line Interface
이걸 그림으로 보는 게 GUI //


★별도 인코딩 문제 해결 !
ANSI로 저장하면 인코딩을 별도로 안해도 됨

찾아보니 윈도우 탑재된 cmd창은 utf-8로 인코딩을 해도 ms949로 인코딩한다고 함


class 파일
0과 1로 되어있다
컴퓨터를 위한 것

java 파일은 사람을 위한 것

프로젝트 - 컴파일로 된걸 올려야함
보안(해킹)의 문제
해킹해봤자 01만 보이잖아? 물론 해석하는 툴도 있지만 100% 안맞을 수 있음

팀 프로젝트를 할 땐 java파일도 같이 줘야함

class 파일은 jvm이 보고 해석해서 실행
jvm에게 java 명령어란  << 이걸 해석해서 실행해주세요 ~
확장자를 붙이지 않음
=> java Ex01 입력
'자바의 꿈'이 출력됨 

java Ex1
(인터프리터 단계) = 해석 실행 단계

Ex01 해설
class명은 파일명과 같아야한다
class명의 첫 글자는 무조건 대문자이다.
=> 첫 글자가 대문자라면 class
Ex01에서 대문자는 Ex01, String[], System 3개가 있으며, 이들은 모두 class이다.
class는 자바에서 파일로 저장할 수 있는 최소 단위이다.
class는 메서드와 필드로 구성되어있다.
=> 메서드와 필드는 따로 저장할 수 없다.
필드만 있어도 되고, 메서드만 있어도 되지만 이들은 반드시 class 내부에 있어야 한다
필드 : 상태값(state?) = 데이터, 아는 것
메서드 : 동작 = 하는 것
정적이고, 동적인 것의 차이일까?

필드 === 변수와 상수
변수 : 변하는 상태값
상수 : 변하지 않는 상태값


public static void main(String[] args){}
- ()는 메서드이다. (동작, 하는 일)
Ex01에서 메서드는 main, println 2개이다.
메인 메서드, 프린트ln메서드
메인 메서드는 JVM이 호출해서 사용하는 메서드이다.
※ JVM : 해석하고 실행!!
=> 메인 메서드가 없으면 호출할 수 없고, 2개 이상 있으면 무엇을 호출할 지 모르므로 에러가 난다
따라서 프로젝트에서는 1개의 메인 메서드만 있어야한다
자바 프로그램을 시작시키는 시작점

  System.out.println("자바의 꿈");
system.out은 내가 만든 게 아니라 java 회사에서 제공하는 API

JAVA를 잘 하려면? API 사용법을 많이 알고 잘 갖다쓰면 된다


https://docs.oracle.com/en/java/javase/11/docs/api/index.html

ALL CLASSES
-> system
public final class System
내용은 몰라도 System 역시 class로 만들어졌다
class명 표기법 : 카멜 표기법 - 낙타의 등 모습

Field Summary
Field는 상태값

out - 표준 출력 장치, 모니터
in - 표준 입력 장치, 키보드
err - 오류 표시 출력 장치, 모니터

=> System.out => 모니터를 말함

class Ex01{
	public static void main(String[] args){
		System.out.println("자바의 꿈");
}
}

눈감고 치기
class Ex01{
public static void main(string[] args){
System.out.pringln("자바의 꿈")
}
}
String 대문자 빠짐
println의 t 오타
배운 거 하루에 10번씩은 쳐라

백견이 불여일타


String[] args
args 문자열을 배열로 사용하겠다는의미



dir
크기가 있으면 파일, 없으면 폴더


복습을 하면서 한 파일 안에 3개의 클래스를 넣어보았다
이 상태로 컴파일을 하면 클래스 3개의 파일이 생긴다
이런식으로 사용은 가능하나 클래스명과 파일명이 다르기에 파일을 찾을 때 문제가 생길 수 있다


파일 내용을 수정하면 컴파일(javac)을 다시 해야 한다

강의실 조금 답답하고 덥고 마스크 귀 아프다


System.out.print();
는 오류다

https://docs.oracle.com/en/java/javase/11/docs/api/index.html
들어가보면 print()는 없다
System.out.print(""); 와는 다르다


이스케이프 문자
\n \t 등
https://developer-yeony.tistory.com/82


자바 API를 마지막으로 1장 끝
API는 도움말과 같은 것 !



식별자 = 명명법 = 이름 만드는 법
클래스 : 첫 글자 대문자로 시작한다.
            하나 이상의 단어가 합쳐질 때는 단어의 첫글자들은 대문자이다.
            띄어쓰기 안됨, 특수문자 안됨(2개가 있으나 쓰지마)
            숫자는 중간이나 뒤에 붙인다.

클래스 안에는 필드와 메서드가 존재한다.
필드 = 상태값 = 데이터
변수와 상수 두 가지가 존재한다.
변수는 프로그램이 끝낼 때까지 언제든지 변할 수 있는 상태
상수는 한번 지정하면 프로그램이 끝날 때까지 변하지 않는 상태

변수는 첫 글자 소문자로 시작한다.
	하나 이상의 단어가 합쳐질 때는
	단어의 첫 글자들은 대문자이다.
	띄어쓰기 안됨, 특수문자 안됨
	숫자는 중간이나 뒤에 붙인다.

상수는 모든 글자가 대문자이다.
	하나 이상의 단어가 합쳐질 때는 
	언더스코어 _ 를 사용할 수 있다. 

JavaLandExam	:    클래스
javaLandExam	:    변수
JAVALANDEXAM	:    상수
JAVA_LAND_EXAM	:    상수 - 가독성이 높다

메서드 : 기능, 동작, 하는 것, 메서드 이름()
	메서드 이름 만드는 법은 변수와 같다.
파스칼 표기법
자바 api -> all classes -> string
보안 문제 // 규칙 중요

예약어 .. - 변수명으로 쓰면안됨
굳이 외울 필요는 없다 ??
치다가 자연스럽게 외워진대;;


자료형 = 데이터타입 = 자바에서 데이터를 구별해서 처리하는 것
                    	     자바에서 처리하는 데이터의 종류

 - 기본자료형 : 컴파일러에 의해서 해석되는 자료형
※ 컴파일러 : 문자를 0과 1로 변환
	        문자, 정수, 실수, 논리

 - 참조자료형 : 클래스를 자료형으로 사용하는 것
자바는 클래스로 이루어져있다 //!!//
고오급 코딩

※ String은 기본자료형처럼 쓰는 참조자료형이다.

자바에서 기본 자료형을 뜻하는 단어들
논리 : boolean : true(참), false(거짓) : 주로 조건식에 사용된다. 
자바는 0과 1을 참, 거짓을 대신해 쓸 수 없다(다른 언어는 대신하기도 함)


언어별 자료형이 다르다
근데 또 비슷하다
그래서 헷갈림
자바 하나부터 확실히 알 것
